/*ELIMINAMOS LA BASE DE DATOS EN CASO DE QUE EXISTA*/
DROP DATABASE IF EXISTS LIBRERIA;

/*CREAMOS LA BASE DE DATOS*/
CREATE DATABASE LIBRERIA;

/*USAMOS LA BASE DE DATOS*/
USE LIBRERIA;

/*CREAMOS LA TABLA PARA LOS LIBROS*/
CREATE TABLE LIBROS (
    ID_LIBRO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    TITULO VARCHAR(250), 
    AUTOR VARCHAR(250),
    PRECIO INT,
    STOCK INT NOT NULL, 
    FECHA_CREACION DATETIME
) ENGINE=INNODB;

/*CREAMOS LA TABLA CONTROL PARA SABER CUANDO HAY UN CAMBIO EN EL PRECIO DE LOS LIBROS*/
CREATE TABLE CONTROL (
    FECHA DATE, 
    ID_LIBRO INT,
    NUEVO_PRECIO INT,
    PRECIO_ANTERIOR INT,
    FOREIGN KEY (ID_LIBRO) REFERENCES LIBROS(ID_LIBRO)
) ENGINE=INNODB;

/*CREAMOS EL TRIGGER PARA REGISTRAR EL CAMBIO DEL PRECIOS*/ 
DELIMITER //

CREATE TRIGGER AFTER_PRECIO_UPDATE
AFTER UPDATE ON LIBROS
FOR EACH ROW
BEGIN
    IF OLD.PRECIO <> NEW.PRECIO THEN
        INSERT INTO CONTROL (FECHA, ID_LIBRO, NUEVO_PRECIO, PRECIO_ANTERIOR)
        VALUES (NOW(), NEW.ID_LIBRO, NEW.PRECIO, OLD.PRECIO);
    END IF;
END //

DELIMITER ;

/*PROCEDIMIENTO ALMACENADO PARA INSERTAR LIBROS*/
DELIMITER //

CREATE PROCEDURE InsertarLibro(
    IN p_titulo VARCHAR(250),
    IN p_autor VARCHAR(250),
    IN p_precio INT,
    IN p_stock INT,
    IN p_fecha_creacion DATETIME
)
BEGIN
    INSERT INTO LIBROS (TITULO, AUTOR, PRECIO, STOCK, FECHA_CREACION)
    VALUES (p_titulo, p_autor, p_precio, p_stock, p_fecha_creacion);
END //

DELIMITER ;

/*PROCEDIMIENTO ALMACENADO PARA CTUALIZAR EL PRECIO DE UN LIBRO*/
DELIMITER //

CREATE PROCEDURE ActualizarPrecioLibro(
    IN p_id_libro INT,
    IN p_nuevo_precio INT
)
BEGIN
    DECLARE v_precio_anterior INT;

  /*ONTENEMOS EL PRECIO ANTERIOR DEL LIBRE*/  
    SELECT PRECIO INTO v_precio_anterior
    FROM LIBROS
    WHERE ID_LIBRO = p_id_libro;

    /*ACTUALIZAMOS EL PRECIO DEL LIBRO*/
    UPDATE LIBROS
    SET PRECIO = p_nuevo_precio
    WHERE ID_LIBRO = p_id_libro;

    /*CONDICION PARA VERIFICAR QUE EK PRECIO CAMBIO, EN CADO DE QUE CAMBIE, SE REGISTRA EL CAMBIO EN LA TABLA CONTROL*/
    IF v_precio_anterior <> p_nuevo_precio THEN
        INSERT INTO CONTROL (FECHA, ID_LIBRO, NUEVO_PRECIO, PRECIO_ANTERIOR)
        VALUES (NOW(), p_id_libro, p_nuevo_precio, v_precio_anterior);
    END IF;
END //

DELIMITER ;

/*PROCEDIMIENYO ALMACENADO PARA CONSULTAR LOS LIBROS*/
DELIMITER //

CREATE PROCEDURE ConsultarLibros()
BEGIN
    SELECT * FROM LIBROS;
END //

DELIMITER ;

/*PROCEDIMIENTO ALMACENADO PARA CONSULTAR EL HISTORIAL DE CAMBIOS DE PRECIO DE LIBROS*/
DELIMITER //

CREATE PROCEDURE ConsultarHistorialPrecio(
    IN p_id_libro INT
)
BEGIN
    SELECT * FROM CONTROL
    WHERE ID_LIBRO = p_id_libro
    ORDER BY FECHA DESC;
END //

DELIMITER ;

/*INSERTAMOS LIBROS */
CALL InsertarLibro('Cien años de soledad', 'Gabriel Garcia Marquez', 15, 50, '1967-06-05');
CALL InsertarLibro('La sombra del viento', 'Carlos Ruiz Zafon', 18, 40, '2001-03-01');
CALL InsertarLibro('1984', 'George Orwell', 12, 60, '1949-06-08');
CALL InsertarLibro('El principito', 'Antoine de Saint-Exupéry', 10, 80, '1943-04-06');
CALL InsertarLibro('El codigo Da Vinci', 'Dan Brown', 22, 20, '1960-07-11');

/*VEMOS LOS LIBROS INSERTADOS*/
SELECT * FROM LIBROS;

/*ACTUALIZAMOS EL PRECIO DE EL LIBRO CON EL ID 1*/
CALL ActualizarPrecioLibro(1, 25);

/*CONSULTAMOS EL ISTORIAL DE CAMBIOS DE PRECIO DEL LIBRO CON EL ID 1*/
CALL ConsultarHistorialPrecio(1);
